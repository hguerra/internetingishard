* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.menu {
    height: 100px;
    background-color: #B2D6FF; /* Medium blue */
}

.sidebar {
    height: 300px;
    background-color: #F09A9D; /* Red */
}

.content {
    height: 500px;
    background-color: #F5CF8E; /* Yellow */
}

.footer {
    /* height: 200px; */
    background-color: #D6E9FE; /* Light blue */
}

.sidebar {
    width: 200px;
    float: left;
}

.page {
    width: 900px;
    margin: 0 auto;
}

.content {
    width: 600px;
    float: left;
}

/* debug */
/* .page {
    border: 5px solid red;
} */

/*
To summarize,

when you have an extra unfloated HTML element at the bottom of a container div,
use the clear solution. Otherwise,
add an overflow: hidden declaration to the container element.
The underlying idea for both options is that you need a way to tell the
browser to incorporate floats into the height of their container
element in order for their backgrounds to show up.
*/

.footer {
    clear: both;
}

/* .page {
    overflow: hidden;
    background-color: #EAEDF0;
} */

.container {
    overflow: hidden;
    background-color: #EAEDF0;
}

.column {
    float: left;
    width: 31%;
    margin: 20px 1.15%;
    height: 160px;
    background-color: #B2D6FF;
}

.footer {
    overflow: hidden;
}

.content {
    padding: 20px;
}

.article-image {
    float: left;
    width: 300px;
    height: 200px;
    margin-right: 20px;
    margin-bottom: 20px;
}

p {
    margin-bottom: 20px;
}

.avatar {
    float: left;
    width: 60px;
    height: 60px;
    margin: 25px;
    border-radius: 40px;
    background-color: #D6E9FE;
}

.username {
    margin-top: 30px;
}

.comment {
    margin: 10px;
    overflow: hidden;
}
